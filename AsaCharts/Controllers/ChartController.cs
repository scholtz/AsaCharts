using AsaCharts.Model;
using AsaCharts.Repository;
using GraphQL;
using GraphQL.Client.Http;
using GraphQL.Client.Serializer.Newtonsoft;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;

namespace AsaCharts.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class ChartController : ControllerBase
    {
        private readonly ILogger<ChartController> _logger;
        private readonly GraphQLRepository graphQLRepository;
        public ChartController(ILogger<ChartController> logger, GraphQLRepository graphQLRepository)
        {
            _logger = logger;
            this.graphQLRepository = graphQLRepository;
        }

        /// <summary>
        /// Returns TV config
        /// </summary>
        /// <returns></returns>
        [HttpGet("config")]
        public ActionResult<Config> Config()
        {
            return Ok(new Config()
            {
                SupportedResolutions = new string[] { "1", "5", "15", "30", "60", "1D", "1W", "1M" },
                SupportsSearch = true
            });
        }
        /// <summary>
        /// Symbol resolve
        ///     Request: GET /symbols? symbol =< symbol >
        ///     symbol: string. Symbol name or ticker.
        ///     Example: GET /symbols? symbol = AAL, GET /symbols? symbol = NYSE:MSFT
        ///     A JSON response of the same structure as SymbolInfo
        ///     Remark: This call will be requested if your data feed sent supports_group_request: false and supports_search: true in the configuration data.
        ///     @{
        /// {"s":"error","errmsg":"unknown_symbol APPL"}
        /// }
        /// {"name":"MSFT","exchange-traded":"NasdaqNM","exchange-listed":"NasdaqNM","timezone":"America/New_York","minmov":1,"minmov2":0,"pointvalue":1,"session":"0930-1630","has_intraday":false,"has_no_volume":false,"description":"Microsoft Corporation","type":"stock","supported_resolutions":["D","2D","3D","W","3W","M","6M"],"pricescale":100,"ticker":"MSFT"}
        /// </summary>
        [HttpGet("symbols")]
        public async Task<ActionResult<Symbol>> Symbols([FromQuery] string symbol)
        {
            try
            {

                if (symbol.StartsWith("DATAPROVIDER:"))
                {
                    symbol = symbol.Substring(13);
                }
                if (symbol.StartsWith("ALGO:"))
                {
                    symbol = symbol.Substring(5);
                }

                if (graphQLRepository.Symbols.TryGetValue(symbol, out var s))
                {
                    return Ok(new Symbol()
                    {
                        Ticker = s.Ticker,
                        Description = s.Description,
                        Name = s.Name
                    });
                }

                throw new Exception($"Unable to find ticker ${symbol}");
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// Search symbols
        /// 
        /// [
        /// {
        /// "symbol": "<short symbol name>",
        /// "full_name": "<full symbol name>", // e.g. BTCE:BTCUSD
        /// "description": "<symbol description>",
        /// "exchange": "<symbol exchange name>",
        /// "ticker": "<symbol ticker name, optional>",
        /// "type": "stock" // or "futures" or "bitcoin" or "forex" or "index"
        /// },
        /// {
        /// //    .....
        /// }
        /// ]
        /// </summary>
        [HttpGet("search")]
        public ActionResult<SearchItem[]> Search([FromQuery] string query, [FromQuery] string type, [FromQuery] string exchange, [FromQuery] string limit)
        {
            try
            {
                if (!int.TryParse(limit, out var limitInt))
                {
                    throw new Exception("Unable to parse limit");
                }

                if (query.StartsWith("DATAPROVIDER:"))
                {
                    query = query.Substring(13);
                }
                if (query.StartsWith("ALGO:"))
                {
                    query = query.Substring(5);
                }
                var ret = graphQLRepository.Symbols.Where(s => s.Key.Contains(query)).Select(s => new SearchItem()
                {
                    Description = s.Value.Description,
                    Exchange = "ALGO",
                    FullName = s.Value.Name,
                    Symbol = s.Value.Ticker,
                    Ticker = s.Value.Ticker,
                    Type = "ARC0017"

                });
                if (ret.Any())
                {
                    return Ok(ret.Take(limitInt));
                }

                throw new Exception($"Unable to find query ${query}");
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// 
        ///        {
        ///            s: "ok",
        ///       t: [1386493512, 1386493572, 1386493632, 1386493692],
        ///       c: [42.1, 43.4, 44.3, 42.8]
        ///    }
        ///
        ///        {
        ///            s: "no_data",
        ///       nextTime: 1386493512
        ///                }
        ///
        ///{
        ///s: "ok",
        ///       t: [1386493512, 1386493572, 1386493632, 1386493692],
        ///       c: [42.1, 43.4, 44.3, 42.8],
        ///       o: [41.0, 42.9, 43.7, 44.5],
        ///       h: [43.0, 44.1, 44.8, 44.5],
        ///       l: [40.4, 42.1, 42.8, 42.3],
        ///       v: [12000, 18500, 24000, 45000]
        ///                }
        ///{"t":[1400025600,1400112000,1400198400,1400457600,1400544000,1400630400,1400716800,1400803200,1401148800,1401235200,1401321600,1401408000,1401667200,1401753600,1401840000,1401926400,1402012800,1402272000,1402358400,1402444800,1402531200,1402617600,1402876800,1402963200,1403049600,1403136000,1403222400,1403481600,1403568000,1403654400,1403740800,1403827200,1404086400,1404172800,1404259200,1404345600,1404691200,1404777600,1404864000,1404950400,1405036800,1405296000,1405382400,1405468800,1405555200,1405641600,1405900800,1405987200,1406073600,1406160000,1406246400,1406505600,1406592000,1406678400,1406764800,1406851200,1407110400,1407196800,1407283200,1407369600,1407456000,1407715200,1407801600,1407888000,1407974400,1408060800,1408320000,1408406400,1408492800,1408579200,1408665600,1408924800,1409011200,1409097600,1409184000,1409270400,1409616000,1409702400,1409788800,1409875200,1410134400,1410220800,1410307200,1410393600,1410480000,1410739200,1410825600,1410912000,1410998400,1411084800,1411344000,1411430400,1411516800,1411603200,1411689600,1411948800,1412035200,1412121600,1412208000,1412294400,1412553600,1412640000,1412726400,1412812800,1412899200,1413158400,1413244800,1413331200,1413417600,1413504000,1413763200,1413849600,1413936000,1414022400,1414108800,1414368000,1414454400,1414540800,1414627200,1414713600,1414972800,1415059200,1415145600,1415232000,1415318400,1415577600,1415664000,1415750400,1415836800,1415923200,1416182400,1416268800,1416355200,1416441600,1416528000,1416787200,1416873600,1416960000,1417132800,1417392000,1417478400,1417564800,1417651200,1417737600,1417996800,1418083200,1418169600,1418256000,1418342400,1418601600,1418688000,1418774400,1418860800,1418947200,1419206400,1419292800,1419379200,1419552000,1419811200,1419897600,1419984000,1420156800,1420416000,1420502400,1420588800,1420675200,1420761600,1421020800,1421107200,1421193600,1421280000,1421366400,1421712000,1421798400,1421884800,1421971200,1422230400,1422316800,1422403200,1422489600,1422576000,1422835200,1422921600,1423008000,1423094400,1423180800,1423440000,1423526400,1423612800,1423699200,1423785600,1424131200,1424217600,1424304000,1424390400,1424649600,1424736000,1424822400,1424908800,1424995200,1425254400,1425340800,1425427200,1425513600,1425600000,1425859200,1425945600,1426032000,1426118400,1426204800,1426464000,1426550400,1426636800,1426723200,1426809600,1427068800,1427155200,1427241600,1427328000,1427414400,1427673600,1427760000,1427846400,1427932800,1428278400,1428364800,1428451200,1428537600,1428624000,1428883200,1428969600,1429056000,1429142400,1429228800,1429488000,1429574400,1429660800,1429747200,1429833600,1430092800,1430179200,1430265600,1430352000,1430438400,1430697600,1430784000,1430870400,1430956800,1431043200,1431302400,1431388800,1431475200,1431561600,1431648000,1431907200,1431993600,1432080000,1432166400,1432252800,1432598400,1432684800,1432771200,1432857600,1433116800,1433203200,1433289600,1433376000,1433462400,1433721600,1433808000,1433894400,1433980800,1434067200,1434326400,1434412800,1434499200,1434585600,1434672000,1434931200,1435017600,1435104000,1435190400,1435276800,1435536000,1435622400,1435708800,1435795200,1436140800,1436227200,1436313600,1436400000,1436486400,1436745600,1436832000,1436918400,1437004800,1437091200,1437350400,1437436800,1437523200,1437609600,1437696000,1437955200,1438041600,1438128000,1438214400,1438300800,1438560000,1438646400,1438732800,1438819200,1438905600,1439164800,1439251200,1439337600,1439424000,1439510400,1439769600,1439856000,1439942400,1440028800,1440115200,1440374400,1440460800,1440547200,1440633600,1440720000,1440979200,1441065600,1441152000,1441238400,1441324800,1441670400,1441756800,1441843200,1441929600,1442188800,1442275200,1442361600,1442448000,1442534400,1442793600,1442880000,1442966400,1443052800,1443139200,1443398400,1443484800,1443571200,1443657600,1443744000,1444003200,1444089600,1444176000,1444262400,1444348800,1444608000,1444694400,1444780800,1444867200,1444953600,1445212800,1445299200,1445385600,1445472000,1445558400,1445817600,1445904000,1445990400,1446076800,1446163200,1446422400,1446508800,1446595200,1446681600,1446768000,1447027200,1447113600,1447200000,1447286400,1447372800,1447632000,1447718400,1447804800,1447891200,1447977600,1448236800,1448323200,1448409600,1448582400,1448841600,1448928000,1449014400,1449100800,1449187200,1449446400,1449532800,1449619200,1449705600,1449792000,1450051200,1450137600,1450224000,1450310400,1450396800,1450656000,1450742400,1450828800,1450915200,1451260800,1451347200,1451433600,1451520000,1451865600,1451952000,1452038400,1452124800,1452211200,1452470400,1452556800,1452643200,1452729600,1452816000,1453161600,1453248000,1453334400,1453420800,1453680000,1453766400,1453852800,1453939200,1454025600,1454284800,1454371200,1454457600,1454544000,1454630400,1454889600,1454976000,1455062400,1455148800,1455235200,1455580800,1455667200,1455753600,1455840000,1456099200,1456185600,1456272000,1456358400,1456444800,1456704000,1456790400,1456876800,1456963200,1457049600,1457308800,1457395200,1457481600,1457568000,1457654400,1457913600,1458000000,1458086400,1458172800,1458259200,1458518400,1458604800,1458691200,1458777600,1459123200,1459209600,1459296000,1459382400,1459468800,1459728000,1459814400,1459900800,1459987200,1460073600,1460332800,1460419200,1460505600,1460592000,1460678400,1460937600,1461024000,1461110400,1461196800,1461283200,1461542400,1461628800,1461715200,1461801600,1461888000,1462147200,1462233600,1462320000,1462406400,1462492800,1462752000,1462838400,1462924800,1463011200,1463097600,1463356800,1463443200,1463529600,1463616000,1463702400,1463961600,1464048000,1464134400,1464220800,1464307200,1464652800,1464739200,1464825600,1464912000,1465171200,1465257600,1465344000,1465430400,1465516800,1465776000,1465862400,1465948800,1466035200,1466121600,1466380800,1466467200,1466553600,1466640000,1466726400,1466985600,1467072000,1467158400,1467244800,1467331200,1467676800,1467763200,1467849600,1467936000,1468195200,1468281600,1468368000,1468454400,1468540800,1468800000,1468886400,1468972800,1469059200,1469145600,1469404800,1469491200,1469577600,1469664000,1469750400,1470009600,1470096000,1470182400,1470268800,1470355200,1470614400,1470700800,1470787200,1470873600,1470960000,1471219200,1471305600,1471392000,1471478400,1471564800,1471824000,1471910400,1471996800,1472083200,1472169600,1472428800,1472515200,1472601600,1472688000,1472774400,1473120000,1473206400,1473292800,1473379200,1473638400,1473724800,1473811200,1473897600,1473984000,1474243200,1474329600,1474416000,1474502400,1474588800,1474848000,1474934400,1475020800,1475107200,1475193600,1475452800,1475539200,1475625600,1475712000,1475798400,1476057600,1476144000,1476230400,1476316800,1476403200,1476662400,1476748800,1476835200,1476921600,1477008000,1477267200,1477353600,1477440000,1477526400,1477612800,1477872000,1477958400,1478044800,1478131200,1478217600,1478476800,1478563200,1478649600,1478736000,1478822400,1479081600,1479168000,1479254400,1479340800,1479427200,1479686400,1479772800,1479859200,1480032000,1480291200,1480377600,1480464000,1480550400,1480636800,1480896000,1480982400,1481068800,1481155200,1481241600,1481500800,1481587200,1481673600,1481760000,1481846400,1482105600,1482192000,1482278400,1482364800,1482451200,1482796800,1482883200,1482969600,1483056000,1483401600,1483488000,1483574400,1483660800,1483920000,1484006400,1484092800,1484179200,1484265600,1484611200,1484697600,1484784000,1484870400,1485129600,1485216000,1485302400,1485388800,1485475200,1485734400,1485820800,1485907200,1485993600,1486080000,1486339200,1486425600,1486512000,1486598400,1486684800,1486944000,1487030400,1487116800,1487203200,1487289600,1487635200,1487721600,1487808000,1487894400,1488153600,1488240000,1488326400,1488412800,1488499200,1488758400,1488844800,1488931200,1489017600,1489104000,1489363200,1489449600,1489536000,1489622400,1489708800,1489968000,1490054400,1490140800,1490227200,1490313600,1490572800,1490659200,1490745600,1490832000,1490918400,1491177600,1491264000,1491350400,1491436800,1491523200,1491782400,1491868800,1491955200,1492041600,1492387200,1492473600,1492560000,1492646400,1492732800,1492992000,1493078400,1493164800,1493251200,1493337600,1493596800,1493683200,1493769600,1493856000,1493942400,1494201600,1494288000,1494374400,1494460800,1494547200,1494806400,1494892800,1494979200,1495065600,1495152000,1495411200,1495497600,1495584000,1495670400,1495756800,1496102400,1496188800,1496275200,1496361600,1496620800,1496707200,1496793600,1496880000,1496966400,1497225600,1497312000,1497398400,1497484800,1497571200,1497830400,1497916800,1498003200,1498089600,1498176000,1498435200,1498521600,1498608000,1498694400,1498780800,1499040000,1499212800,1499299200,1499385600,1499644800,1499731200,1499817600,1499904000,1499990400],"o":[40.3,40.09,39.67,39.61,39.68,39.8,40.29,40.37,40.26,40.14,40.15,40.45,40.95,40.6,40.21,40.59,41.48,41.39,41.03,40.93,40.81,41.1,41.04,41.29,41.605,41.57,41.445,41.73,41.83,41.7,41.93,41.61,42.17,41.86,41.73,41.91,41.75,41.87,41.98,41.37,41.7,42.22,42.33,42.51,45.45,44.65,44.56,45,45.45,44.93,44.3,44.36,43.91,44.07,43.38,43.21,42.97,43.31,42.74,42.84,43.23,43.26,43.04,43.68,44.08,44.58,44.94,44.97,45.34,44.84,45.35,45.4,45.31,44.9,44.75,45.09,45.43,44.53,44.74,45.11,46.02,46.47,46.8201,46.74,46.91,46.54,46.39,46.26,46.59,46.81,47.3,46.85,46.63,46.88,45.93,45.98,46.37,46.27,45.83,45.98,46.12,45.86,45.48,46.5,45.6,43.82,43.87,43,42.53,43.2,43.06,44.36,45,44.62,46.83,45.71,45.86,46.44,46.32,46.94,46.89,47.301,47.8,47.86,48.92,48.65,48.85,48.56,48.81,49.74,49.41,49.13,48.66,48,49.02,47.99,47.66,47.49,47.95,47.88,48.84,48.44,48.39,48.82,48.26,47.11,47.58,47.08,46.78,47.2,45.9,45.05,46.58,47.63,47.78,48.37,48.64,48.41,47.7,47.44,46.73,46.66,46.37,46.38,45.98,46.75,47.61,47.42,46.97,45.96,46.22,45.31,46.3,45.94,46.38,47.36,47,42.95,42.74,40.93,41.55,40.59,41.63,41.94,42.22,42.68,42.24,42.74,42.65,42.66,43.38,43.97,43.63,43.18,43.51,43.7,44.15,43.95,43.99,44.13,43.67,43.56,43.01,43.07,43,42.19,42.35,42.31,41.33,40.7,41.47,41.37,41.43,42.26,42.56,42.88,42.78,42.92,41.22,41.12,41.1,40.78,40.6,40.66,40.34,41.61,41.46,41.25,41.63,41.4,41.8,41.76,41.95,41.67,41.73,43,42.67,42.89,45.66,47.23,47.78,48.72,48.7,48.58,48.37,47.82,47.57,46.27,47.55,47.55,46.85,48.19,48.0301,48.87,47.98,47.56,47.39,47.28,47.3,46.83,46.82,47.5,47.43,47.06,46.93,47.37,46.79,46.31,46.3,45.76,45.79,46.66,46.22,45.45,45.35,45.73,46.22,46.79,46.33,46.13,45.67,46.03,45.65,45.04,44.71,44.46,44.48,43.96,44.34,44.44,44.75,45.01,44.975,45.45,45.68,46.01,46.55,46.65,46.78,45.44,45.27,45.91,45.94,45.58,45.4,46.26,47.29,46.98,46.75,47.98,47.71,46.39,46.95,46.82,46.19,47.06,46.53,46.81,46.84,46.78,46.07,45.3,40.45,42.565,42.01,43.14,43.47,43.74,42.23,42.24,43.41,42.81,43.3,44.21,43.12,43.14,43.43,43.19,43.97,44.29,43.5,43.62,43.38,43.93,43.45,44.48,43.83,43.37,43.88,44.75,44.27,45.745,46.33,47.1,46.56,47.45,46.98,46.56,46.65,47.01,47.02,47.42,47.44,47.92,47.53,52.3,52.53,53.99,53.54,53.54,53.32,52.85,52.93,54.18,54.49,54.085,54.55,54.07,53.7,53.48,53.07,53.08,53.17,53,53.99,54.25,54.25,53.92,54.09,53.8,54.54,54.41,55.32,55.49,54.12,55.79,55.47,55.37,55.39,54.71,54.33,55.66,55.54,56.36,55.77,54.88,54.99,55.7,55.86,55.35,56.29,56.47,56.04,54.32,54.93,54.32,52.7,52.37,52.51,52.76,53.8,52,51.31,51.48,49.98,51,51.41,51.94,51.79,52.01,51.86,54.73,54.88,54.17,53.25,52.1,51.94,49.55,49.02,49.89,48.68,50.25,50.9,51.49,52.33,51.97,52.28,52.34,50.69,51.73,52.6,51.35,50.97,52.41,52.97,52.4,51.56,50.8,51.89,52.93,53,52.71,52.75,53.45,54.21,54.92,53.25,53.61,54.11,53.84,54.21,53.66,54.93,54.95,55.05,55.43,55.19,54.36,54.87,54.67,54.49,54.37,55.12,55.22,55.3,55.49,56.63,56.29,55.8,51.91,51.78,52.26,51.48,50.62,49.35,50,50.34,49.84,49.87,49.92,50.49,50.33,51.13,51.2,51.44,50.8,51.72,50.48,50.47,50.48,50.6,50.7,51.92,51.93,51.92,52.26,52.44,52.64,52.38,51.99,52.24,52.02,52,51.05,49.58,49.9,49.78,49.52,50.41,50.64,50.2,51.08,51.28,49.81,49.1,48.92,49.91,50.72,51.13,50.83,50.78,51.42,51.73,52.5,52.94,53.56,53.84,53.95,53.7,53.71,56.15,55.98,56.08,56.47,56.52,56.61,56,56.26,56.6,56.85,56.68,56.8,57.65,58.055,58.17,58.16,58.03,58.03,58.01,57.61,57.54,57.42,57.43,57.6,57.9,57.8,57.88,58.28,58.18,57.98,57.65,57.01,57.67,57.78,57.47,57.63,56.79,56,56.5,56.39,56.15,57.63,57.27,57.35,57.51,57.92,57.87,57.08,56.93,57.88,57.81,57.57,57.405,57.27,57.29,57.74,57.85,57.91,57.89,57.11,56.7,57.12,57.36,57.53,57.47,57.5,60.28,59.94,60.85,60.81,60.61,60.01,60.16,59.97,59.82,59.53,58.65,59.78,60.55,60,60.48,58.23,59.02,58.33,58.94,60.41,60.78,60.5,60.98,61.01,60.3,60.34,60.65,60.86,60.11,59.08,59.7,60.43,60.01,61.3,61.18,61.82,62.5,63,62.7,62.95,62.56,63.69,63.43,63.84,63.45,63.21,63.4,62.86,62.96,62.79,62.48,62.19,62.3,62.76,62.73,62.61,63.06,62.62,62.68,62.67,62.24,62.67,62.7,63.2,63.95,64.12,65.39,65.69,64.86,64.355,63.25,63.5,63.5,63.74,63.57,63.52,64.25,64.24,64.41,64.5,64.74,64.47,64.61,64.33,64.42,64.53,64.54,64.08,64.13,64.69,63.99,63.97,64.19,64.26,65.19,65.11,65.01,64.53,64.55,64.75,64.91,64.91,65.19,64.12,64.94,65.36,64.63,64.96,65.12,65.42,65.65,65.81,65.39,66.3,65.6,65.85,65.61,65.6,65.42,65.29,65.04,65.33,65.65,65.46,65.67,67.48,67.9,68.08,68.15,68.91,68.68,69.71,69.38,69.03,68.9,68.97,68.86,68.99,68.36,68.61,68.14,68.23,68.89,67.4,67.5,67.89,68.72,68.87,68.97,69.8,69.79,70.53,70.24,70.44,71.97,72.3,72.635,72.51,72.035,69.25,70.02,70.91,69.27,69.73,70.5,70.82,70.21,70.54,70.09,71.4,70.11,69.21,69.38,68.78,69.33,68.255,68.27,68.7,69.46,70,70.69,71.5,72.24],"h":[40.45,40.4,39.84,39.82,39.94,40.35,40.35,40.37,40.26,40.19,40.35,40.97,41.09,40.68,40.37,41.25,41.66,41.48,41.16,41.07,40.88,41.565,41.61,41.91,41.74,41.77,41.83,42,41.94,42.05,41.94,42.29,42.21,42.15,41.9,41.99,42.12,42,41.99,42,42.09,42.45,42.47,44.31,45.71,44.84,45.16,45.15,45.45,45,44.66,44.51,44.09,44.1,43.69,43.25,43.47,43.46,43.17,43.45,43.315,43.45,43.59,44.18,44.417,44.895,45.11,45.34,45.4,45.25,45.47,45.44,45.395,45,44.98,45.44,45.46,45.11,45.27,45.93,46.8,46.97,46.94,47,47.02,46.71,46.85,46.69,46.83,47.57,47.38,46.98,47.11,47.09,46.62,46.56,46.4763,46.53,46.1,46.3,46.3,45.93,46.89,46.8,46.12,44.56,44.38,43.39,43.08,43.935,44.14,44.975,45.07,45.445,46.9,46.1,46.5,46.7,46.32,46.97,47.46,47.73,47.9,48.86,48.92,49.15,48.93,48.92,49.645,50.045,49.705,49.325,48.7549,48.7,49.05,48,47.97,47.99,48.195,48.78,49.05,48.5,49.06,48.97,48.35,47.92,47.66,47.74,47.73,47.67,46.34,45.945,47.52,48.1,48.12,48.8,48.64,48.41,47.78,47.62,47.44,47.42,46.73,46.749,46.46,47.7499,47.82,47.54,47.91,46.24,46.38,46.28,46.65,46.14,47.135,47.39,47.1339,43.2,42.79,42.12,41.58,41.37,41.93,42.21,42.64,42.79,42.74,42.77,42.65,43.09,43.87,44,43.7,43.5263,43.88,44.19,44.3,44.09,44.23,44.2,44.19,43.825,43.21,43.24,43.11,43.125,42.71,42.37,41.65,41.47,41.64,41.83,42.83,42.59,42.98,43.13,43.17,42.925,41.61,41.43,41.54,41.03,40.76,40.74,41.78,41.91,41.69,41.62,41.95,42.06,42.03,42.46,42.34,41.74,43.17,43.15,43.13,43.61,48.14,48.13,49.21,49.31,49.54,48.875,48.87,48.16,47.77,47.085,47.98,47.91,47.68,48.32,48.82,48.905,48.22,47.81,47.93,47.6,47.35,46.88,47.77,48.02,47.57,47.77,47.35,47.735,47.16,46.52,46.43,45.94,46.83,46.92,46.47,45.65,46.24,46.07,46.8,46.825,46.72,46.28,46.245,46.06,46.28,45.23,44.72,45.23,44.75,44.48,44.49,44.9,45.22,45.14,45.62,45.96,45.89,46.69,46.78,47.13,47.33,46.93,46.23,46.32,46.01,45.639,46.78,47.4,47.37,47,47.71,48.41,47.77,46.78,47.49,46.94,46.9,47.1,47.1,47.45,47.43,47.08,46.47,45.48,43.31,43.24,42.84,43.95,44.15,43.93,42.59,43.38,43.98,43.04,44,44.4,43.79,43.59,43.44,44.29,44.38,45,43.99,44.47,44.05,44.17,44.13,44.73,44.085,43.57,44.3,44.75,45.57,46.89,47.175,47.35,47.515,47.54,47.07,47.1299,47.1,47.03,47.54,47.88,47.81,47.99,48.95,54.07,54.32,54.37,53.98,53.83,53.99,53.36,54.39,54.88,54.7,54.98,54.87,54.13,54.2,53.9791,53.29,53.89,53.53,53.98,54.66,54.3,54.46,54.44,54.23,54.08,54.96,55.23,55.96,55.77,56.23,55.97,56.1,55.87,55.655,55.1,55.21,55.9,56.245,56.79,56,55.35,55.48,55.88,55.96,55.95,56.85,56.78,56.19,54.8,55.39,54.4001,53.485,53.28,52.85,53.1,54.07,53.4163,51.97,51.68,51.38,51.58,52.33,52.65,52.44,52.2,52.21,55.09,55.09,54.26,53.39,52.81,52,49.57,50.24,50.39,50.11,50.68,51.09,52.77,52.95,52.28,53,52.37,51.5,52.1,52.68,51.65,52.59,52.96,52.97,52.45,51.8,52.13,52.85,52.94,53.07,53.59,53.59,54.6,55,54.97,53.9298,54.25,54.24,54.33,54.29,54.86,55.64,55.59,55.61,55.66,55.3,55.2,54.91,55.28,55.15,54.78,55.4375,55.575,55.92,56.59,56.77,56.5,56.23,52.4297,52.13,52.35,51.5,50.77,50.25,50.75,50.41,50.06,50.3,50.39,50.585,51.1,51.78,51.81,51.895,51.96,51.73,51.14,50.62,51.22,50.68,51.71,52.49,51.9793,52.32,53,52.95,52.74,52.42,52.35,52.73,52.44,52,52.05,50.715,50.1,50.12,50.47,50.43,50.83,51.43,51.46,52.06,50.94,49.1466,49.47,50.72,51.3,51.72,51.28,51.54,51.61,52.36,52.83,53.4,53.86,53.99,54,54.34,53.9,56.84,56.23,56.6275,56.74,57.29,56.8,56.37,56.76,56.75,56.9,57.11,57.5193,58.21,58.085,58.5,58.32,58.45,58.19,58.5,57.62,57.68,57.7,57.73,57.75,58.18,58.04,58.29,58.7,58.6,58.19,57.8,57.82,58.19,57.8,57.84,57.79,57.52,57.205,56.65,56.63,57.35,57.63,57.75,57.35,57.85,58,57.91,57.14,58.06,58.06,58.1679,57.77,57.55,57.595,57.9601,57.86,57.98,58.39,58.02,57.27,57.3,57.74,57.46,57.945,57.84,57.52,60.45,61,61.3699,61.2,60.83,60.52,60.42,60.02,59.93,59.64,59.28,60.52,60.78,60.59,60.49,59.116,59.08,59.49,59.66,60.95,61.14,60.97,61.26,61.1,60.53,61.02,61.41,61.18,60.15,59.47,60.585,60.46,61.38,61.58,61.99,62.3,63.42,63.45,63.1535,62.95,63.77,63.8,63.7,64.1,63.54,64.07,63.4,63.2,62.99,62.84,62.75,62.66,63.15,63.08,63.07,63.23,63.4,62.865,62.7,62.7,62.98,62.82,63.1159,63.735,64.1,64.535,65.91,65.79,65.15,64.62,63.41,63.7,63.65,63.78,63.81,64.435,64.3,64.86,64.72,64.57,65.24,64.69,64.95,64.39,64.7285,64.8,64.54,64.2,64.99,64.75,64.28,64.56,64.775,65.085,65.2,65.26,65.195,64.55,64.92,64.76,65.24,65.175,65.5,65.14,65.235,65.45,65.22,65.47,65.5,65.98,66.19,65.94,65.81,66.35,66.055,65.96,65.82,65.61,65.51,65.86,65.49,65.71,65.75,65.75,66.7,67.66,68.04,68.31,68.38,69.14,69.55,69.71,69.38,69.08,69.03,69.05,69.28,69.56,68.73,68.61,68.48,69.44,69.1,68.13,68.095,68.5,68.75,68.88,69.88,70.22,70.41,70.74,70.61,71.86,72.89,72.62,72.77,72.52,72.08,69.94,70.82,71.1,70.21,70.0252,70.945,70.87,70.62,70.59,71.25,71.71,70.18,69.841,69.49,69.38,69.6,69.44,68.78,69.84,70.25,70.68,71.28,72.0399,73.27],"l":[40.05,39.51,39.27,39.46,39.46,39.7399,39.85,40,39.81,39.82,39.91,40.25,40.68,40.25,39.86,40.4,41.24,41.02,40.86,40.765,40.29,40.86,41.04,40.335,41.18,41.3301,41.38,41.69,41.56,41.46,41.43,41.51,41.7,41.69,41.53,41.56,41.71,41.61,41.53,41.05,41.48,42.04,42.03,42.48,44.25,44.25,44.22,44.59,44.62,44.32,44.3,43.93,43.64,43.29,43.08,42.6,42.81,42.83,42.21,42.65,42.91,43.02,43,43.52,44.01,44.4,44.68,44.83,44.9,44.83,45.07,45.04,44.94,44.76,44.61,44.855,44.85,44.53,44.72,45.11,45.99,46.42,46.28,46.47,46.6,46.1,46.29,46.23,46.46,46.6,46.98,46.47,46.34,46.03,45.76,45.76,46.01,45.845,45.64,45.61,45.9199,45.42,45.34,45.74,43.95,43.49,43.56,42.1,42.22,42.79,42.81,44.19,44.225,44.53,45.18,45.71,45.77,46.34,45.77,46.48,46.73,47.25,47.26,47.79,48.2901,48.55,48.645,48.52,48.705,49.39,49.14,48.7,47.93,47.87,47.57,47.39,47.45,47.28,47.61,47.71,48.2,47.805,48.2,48.38,47.445,47.05,46.7001,46.68,46.67,46.55,45.13,44.9,46.3386,47.17,47.71,48.13,48.08,47.82,47.26,46.84,46.45,46.54,46.25,45.54,45.49,46.72,46.9,46.36,46.06,45.62,45.41,45.17,45.57,45.48,46.08,46.8,46.2399,42.105,41.16,40.79,40.35,40.23,41.045,41.36,41.855,42.15,42.21,42.18,42.21,42.51,43.15,43.19,43.39,43.05,43.29,43.65,43.92,43.8,43.89,43.66,43.55,43.09,42.88,42.82,42.15,42.19,42.03,41.84,40.86,40.61,41.28,41.15,41.33,42.22,42.49,42.78,42.75,41.44,40.92,40.83,40.91,40.54,40.31,40.12,40.18,41.31,41.04,41.25,41.41,41.39,41.39,41.68,41.82,41.16,41.68,42.53,42.55,42.8,45.65,47.22,47.7,48.5,48.6,48.4,48.18,47.31,46.02,46.16,47.52,47.37,46.42,47.57,48.03,48.05,47.61,47.18,47.27,47.005,46.82,46.19,46.62,47.39,46.59,46.62,46.62,46.82,46.2,45.84,45.67,45.46,45.69,46.13,45.9,45.0201,45.3,45.36,46.17,45.99,46.16,45.62,45.55,45.5,45.03,44.36,43.94,44.1,44.06,43.95,43.32,44.03,44.5,44.57,44.9501,45.31,45.43,45.965,46.26,46.44,46.48,45.203,45.1,45.8,45.25,44.79,45.26,45.93,46.5,46.45,46.68,47.54,46.33,46.26,46.84,45.9,45.705,46.49,46.52,46.57,46.7,46.3,45.66,43.07,39.72,40.39,41.06,42.925,43.39,43.1,41.66,41.88,43.28,42.195,43.2,42.91,42.745,42.9399,42.86,43.08,43.84,44.08,43.33,43.6,43.31,43.51,43.27,43.76,43.205,43.05,43.66,43.75,43.92,45.7,46.22,45.95,46.5,46.92,46.5,46.56,46.53,46.53,46.897,47.02,47.02,47.11,47.09,52.25,52.5,53.58,52.86,53.22,52.62,52.62,52.9,54.06,54,53.964,53.56,53.27,53.46,53.19,52.53,52.85,52.85,52.9799,53.781,53.265,53.75,53.58,53.69,53.79,53.9999,54.3,55.06,53.93,54.1,55.29,54.99,54.51,55.01,54.01,53.68,55.09,54.76,55.5348,54.03,54.2262,54.5,55.44,55.43,54.98,56.06,56.2875,55.42,53.39,54.54,53.64,52.07,52.15,51.46,52.06,51.3038,51.57,50.34,50.06,49.1,50.3,51.26,51.65,51.55,51.0201,51.25,54,54.495,52.65,51.26,51.37,49.56,48.19,48.67,49.52,48.51,49.75,50.13,51.45,52.1,51.53,52.28,50.98,50.2,50.61,51.1,50.66,50.9199,52.155,51.78,51.71,50.58,50.595,51.855,51.16,52.38,52.63,52.74,53.4,54,53.445,52.93,53.46,53.74,53.73,53.33,53.45,54.9,54.86,54.57,55,54.46,54.21,54.23,54.32,54.3,53.76,54.89,55.07,55.11,55.21,55.68,55.485,55.415,50.77,51.63,51.09,50.55,49.56,49.35,49.7799,49.6,49.46,49.73,49.66,50,50.19,51,50.92,51.04,50.75,50.36,50.3,49.82,50.4,49.98,50.4,51.79,51.36,51.77,52.08,52.44,51.835,51.6,51.89,52.1,51.87,51.49,51.04,49.06,49.57,49.69,49.5068,49.82,50.03,50.16,50.9525,51.15,49.52,48.035,48.67,49.8,50.5,51.07,50.74,50.39,51.07,51.55,52.47,52.785,53.18,53.58,53.21,53.55,52.93,55.53,55.76,55.78,56.255,56.51,56.11,55.72,56.05,56.14,56.31,56.49,56.67,57.45,57.78,58.02,57.82,58.03,57.62,57.96,57.27,57.23,57.27,57.2,57.26,57.85,57.715,57.78,57.69,58.1,57.61,57.3,57.01,57.42,57.21,57.405,57.18,56.21,55.61,56.05,56.03,55.98,56.75,56.85,56.75,57.08,57.63,57.38,56.83,56.681,57.67,57.21,57.34,57.06,56.97,57.26,57.28,57.42,57.87,56.89,56.4,56.315,57.12,56.87,57.41,57.395,56.66,59.485,59.93,60.8,60.47,60.09,59.58,59.92,59.25,59.3,59.11,58.52,59.78,60.15,59.2,57.6302,58.01,57.28,58.315,58.81,59.965,60.3,60.42,60.805,60.25,60.13,60.21,60.52,60.215,58.935,58.8,59.56,59.8,59.8,60.84,61.125,61.72,62.24,62.53,62.3,62.115,62.42,63.025,63.12,63.405,62.8,63.21,62.83,62.73,62.03,62.125,62.12,62.03,62.04,62.54,62.28,62.43,61.95,62.35,62.03,62.12,62.195,62.37,62.57,62.94,63.45,63.55,64.89,64.8,64.26,63.47,62.75,63.07,63.14,63.23,63.22,63.32,63.975,64.13,64.02,64.155,64.44,64.3,64.45,64.05,64.195,64.135,64.045,63.76,64.0218,63.88,63.62,63.81,64.19,64.25,64.48,64.75,64.57,64.15,64.25,64.3,64.68,64.72,64.13,64.12,64.765,64.76,64.35,64.65,64.9475,65.36,65.45,65.19,65.28,65.4443,65.48,65.44,65.36,64.85,65.11,64.95,65.01,65.16,64.89,65.14,65.45,67.1,67.6,67.62,67.58,67.69,68.5,69.13,68.71,68.64,68.485,68.42,68.68,68.92,68.12,68.04,67.57,68.16,67.43,67.14,67.43,67.5,68.38,68.45,68.91,69.52,69.77,69.81,69.451,70.24,71.81,72.27,71.95,71.5,68.59,68.13,69.96,69.43,68.8,69.22,70.35,69.87,69.94,69.71,69.92,70.445,69.18,68.79,68.09,68.74,68.02,68.22,68.12,68.7,69.2,69.75,70.55,71.31,71.96],"c":[40.24,39.6,39.83,39.75,39.68,40.35,40.1,40.12,40.19,40.01,40.34,40.94,40.79,40.29,40.32,41.21,41.48,41.27,41.11,40.86,40.58,41.23,41.5,41.68,41.65,41.51,41.68,41.99,41.745,42.03,41.72,42.25,41.7,41.87,41.9,41.8,41.99,41.78,41.67,41.685,42.09,42.14,42.45,44.08,44.53,44.69,44.835,44.83,44.87,44.4,44.5,43.97,43.885,43.5785,43.16,42.86,43.37,43.08,42.74,43.23,43.2,43.2,43.52,44.08,44.27,44.79,45.11,45.33,44.95,45.22,45.15,45.17,45.005,44.87,44.88,45.43,45.09,44.96,45.26,45.91,46.47,46.76,46.84,47,46.695,46.24,46.76,46.52,46.68,47.52,47.06,46.56,47.08,46.04,46.41,46.44,46.36,45.9,45.76,46.09,46.09,45.53,46.78,45.85,44.03,43.65,43.73,43.22,42.74,43.63,44.08,44.88,44.38,45.02,46.13,45.91,46.49,46.62,46.05,46.95,47.44,47.57,47.86,48.7,48.68,48.89,48.87,48.78,49.61,49.58,49.46,48.74,48.22,48.7,47.98,47.59,47.47,47.75,47.81,48.62,48.46,48.08,48.84,48.42,47.695,47.59,46.9,47.17,46.95,46.67,45.16,45.74,47.52,47.66,47.98,48.45,48.14,47.88,47.45,47.02,46.45,46.76,46.325,45.65,46.23,47.59,47.19,46.6,46.355,45.955,45.48,46.24,46.39,45.92,47.13,47.18,47.01,42.66,41.19,42.01,40.4,41.28,41.6,41.84,42.45,42.41,42.36,42.6,42.38,43.09,43.87,43.58,43.53,43.5,43.855,44.15,44.09,43.99,44.055,43.85,43.88,43.28,43.055,43.11,42.36,42.85,42.03,41.98,41.02,41.38,41.56,41.695,42.5,42.285,42.88,42.855,42.9,41.46,41.21,40.97,40.96,40.655,40.72,40.29,41.545,41.53,41.42,41.48,41.72,41.76,41.65,42.255,42.16,41.615,42.905,42.635,42.985,43.34,47.87,48.03,49.155,49.06,48.64,48.655,48.24,47.6,46.28,46.7,47.75,47.37,47.35,47.625,48.72,48.295,48.01,47.58,47.58,47.42,46.9,46.59,47.61,47.45,46.86,47.23,46.92,46.85,46.36,46.14,45.73,45.65,46.61,46.44,45.97,45.475,45.83,45.97,46.72,46.1,46.23,45.91,45.635,45.65,45.26,44.37,44.15,44.445,44.4,44.39,44.3,44.24,44.52,44.61,45.54,45.62,45.76,46.66,46.62,46.92,47.28,45.54,46.11,45.94,45.35,45.34,46.29,46.88,46.7,46.81,47.54,47.58,46.62,46.74,47.33,46.41,46.74,46.73,47,47.32,47.27,46.61,45.66,43.07,41.68,40.47,42.71,43.9,43.93,43.52,41.82,43.36,43.5,42.61,43.89,43.07,43.29,43.48,43.04,43.98,44.3,44.25,43.48,44.11,43.9,43.87,43.91,43.94,43.29,43.44,44.2,44.61,45.57,46.63,46.75,46.8,47.45,47.11,47,46.89,46.68,47.01,47.51,47.62,47.77,47.2,48.03,52.87,54.25,53.69,53.98,53.36,52.64,53.24,54.15,54.4,54.38,54.92,54.16,53.51,53.65,53.32,52.84,53.765,52.97,53.85,53.94,54.19,54.19,54.25,53.69,53.93,54.35,55.22,55.21,54.2,55.91,55.81,55.79,54.98,55.27,54.06,55.14,55.2,56.13,55.7,54.13,54.83,55.35,55.82,55.67,55.95,56.55,56.31,55.48,54.8,55.05,54.05,52.17,52.33,52.3,52.78,51.64,53.11,50.99,50.56,50.79,50.48,52.29,51.79,52.17,51.22,52.055,55.09,54.71,53,52.16,52,50.16,49.41,49.28,49.71,49.69,50.5,51.09,52.42,52.19,51.82,52.65,51.18,51.36,52.1,51.3,50.88,52.58,52.95,52.35,52.03,51.03,51.65,52.84,52.05,53.07,53.17,53.59,54.35,54.66,53.49,53.86,54.07,53.97,54.21,53.54,54.71,55.05,55.23,55.57,55.43,54.56,55.12,54.46,54.42,54.31,54.65,55.35,55.36,55.65,56.46,56.39,55.59,55.78,51.78,52.11,51.44,50.94,49.9,49.87,50.61,49.78,49.87,49.94,50.39,50.07,51.02,51.05,51.51,51.08,51.83,50.51,50.81,50.32,50.62,50.03,51.59,52.12,51.89,52.32,53,52.85,52.48,51.79,52.13,52.1,52.04,51.62,51.48,50.14,49.83,49.69,50.39,50.13,50.07,51.19,50.99,51.91,49.83,48.43,49.44,50.54,51.17,51.16,51.17,51.38,51.38,52.3,52.59,53.21,53.51,53.74,53.7,53.96,53.09,55.91,55.8,56.57,56.73,56.76,56.19,56.21,56.68,56.58,56.58,56.97,57.39,57.96,58.06,58.2,58.02,58.3,57.94,58.12,57.44,57.56,57.6,57.62,57.67,57.89,57.95,58.17,58.03,58.1,57.89,57.46,57.59,57.67,57.61,57.66,57.43,56.21,57.05,56.53,56.26,57.19,57.25,56.93,56.81,57.76,57.82,57.43,56.9,57.95,58.03,57.4,57.6,57.42,57.24,57.64,57.74,57.8,58.04,57.19,57.11,56.92,57.42,57.22,57.66,57.53,57.25,59.66,61,60.99,60.63,60.1,59.87,59.92,59.8,59.43,59.21,58.71,60.42,60.47,60.17,58.7,59.02,58.12,58.87,59.65,60.64,60.35,60.86,61.12,60.4,60.53,60.61,61.09,60.26,59.2,59.25,60.22,59.95,61.37,61.01,61.97,62.17,62.98,62.68,62.58,62.3,63.62,63.54,63.54,63.55,63.24,63.28,62.99,62.9,62.14,62.58,62.3,62.3,62.84,62.64,62.62,63.19,62.61,62.7,62.53,62.5,62.3,62.74,62.96,63.52,63.68,64.27,65.78,65.13,64.65,63.58,63.17,63.68,63.64,63.43,63.34,64.06,64,64.72,64.57,64.53,64.52,64.62,64.49,64.36,64.62,64.62,64.23,63.98,64.94,64.01,64.25,64.27,64.4,64.99,64.73,64.93,64.71,64.41,64.75,64.64,64.87,64.93,64.21,65.03,64.87,64.98,65.1,65.29,65.47,65.71,65.86,65.55,65.73,65.56,65.73,65.68,65.53,65.48,65.23,64.95,65.48,65.39,65.04,65.5,66.4,67.53,67.92,67.83,68.27,68.46,69.41,69.3,69.08,68.81,69,68.94,69.04,69.31,68.46,68.38,68.43,69.41,67.48,67.71,67.69,68.45,68.68,68.77,69.62,69.97,70.41,69.84,70.1,71.76,72.28,72.52,72.39,71.945,70.32,69.78,70.65,70.27,69.9,70,70.87,69.91,70.27,70.26,71.21,70.53,69.21,69.8,68.49,68.93,68.17,69.08,68.57,69.46,69.98,69.99,71.15,71.77,72.78],"v":[18818700,37793200,29867100,24537400,21320900,22398700,20201800,18020000,26160600,25711500,19888200,34567600,18504300,18068900,23209000,31865200,24060500,15019200,15117700,18040000,29818900,26310000,24205300,22518600,27097000,19828200,47764900,18743900,26509100,20049100,23604400,74640000,30805500,26917000,20208100,15969300,21952400,31218200,18445900,21854700,24083000,21881100,28748700,63318000,82180300,43407500,37604400,43095800,52362900,30725300,26737700,29684200,27763100,31921400,31537500,31170300,34277400,26266400,24634000,30314900,28942700,20351600,21431100,22889500,19313200,41611300,26891100,28139500,24770500,22272000,18294500,16898100,14873100,20823000,17657600,21607600,22956800,33684500,26475500,36882700,45719000,40255500,27302400,29216400,38244700,37630700,27865200,38249200,35533100,202522400,38655900,33430300,26480359,32777043,27078764,26090980,33033086,38088355,25119508,32453273,20603960,25724544,33030972,34426595,51978146,37100207,38120558,60220961,49040989,40683346,34530887,36433824,33579817,45451869,61081039,30371308,29049750,30283622,30073873,35849656,23130397,21530813,22449594,33037841,28000598,36370067,23445239,22722123,26210433,29081657,30318648,23996457,26177450,21510587,42884795,35434245,28007993,27164877,21534426,31191575,25773478,23534752,30345132,27313449,26663107,24330506,30431788,29061918,34248371,29247761,47801392,34970865,40105550,64551182,26565984,23656529,11442790,13197817,14439518,16384692,21552450,27913852,39673865,36447854,29114061,29645202,23715642,23651887,35270601,29719580,32750779,35695289,36161860,39081143,35898035,26211594,42525530,169163953,84507078,63585273,78004944,50352532,52082448,41614812,36548168,34616554,31381061,29670676,38262509,33268831,40264887,33695749,27111657,27603420,29721133,32518754,25271747,29759820,28957329,33807740,31924049,31748648,25748692,23193541,36248785,32107957,39159730,32215314,59992502,58007705,35273452,31673448,44194771,33879066,71904529,26246086,25513252,43469907,37495627,34401398,35049662,34887219,36865322,37487476,39223692,28809375,24753438,25723861,28022002,30276692,24244382,27343581,22509652,42387608,46057733,26013844,25064273,46309530,130933665,59248172,60730778,47804562,64725457,38937336,34039485,50369191,52433020,32971654,35364911,24609416,29928264,34184613,32980892,28642694,24136502,28574813,25047919,22410698,25720583,29581860,27335639,19283666,36519594,28837332,21498326,28002154,27745512,25438086,22121634,24406057,28417405,27347758,23930972,33254517,27070306,28704061,32658343,63837036,20318055,25896473,34890901,20615995,49835287,34081746,35945384,28343907,21752013,23033961,36435827,39785901,32424672,25465757,28178329,22880260,26629615,26271673,29467107,30631905,42781899,59152427,33934010,32333244,39701420,34328948,40945864,39777883,31201480,24125886,33403916,26739584,27368000,19163038,23079870,29237402,30198532,22627241,21473402,21099746,23574104,31485511,36238227,70053084,88753660,70616597,63407996,50943211,28246725,34441662,49688896,37671518,28285205,37138775,32469766,33469485,31366630,27132527,23656048,28882206,23372162,32768161,63143684,26177224,28085903,17145238,27905607,29384601,27099680,32763557,33172693,28657859,41839035,34369286,27510808,27711492,33772709,28600632,19769066,19987816,24697766,27189370,26450334,29387581,30802235,25264710,56637074,135227059,64633324,50999907,47000753,30202078,46619761,30284982,36596931,37087849,31468485,32851204,32513067,55283697,36516260,35361095,36848175,32165198,31546754,29710030,28149228,37147608,28235918,24600043,21005147,9009132,56241417,39952779,47274879,38627835,43963662,30709765,32878026,36373209,31775826,39549497,47006491,39842998,37503300,41280907,84684164,37246325,28322241,27279832,9570002,22458293,27731403,21704505,27334061,53777963,34079674,39518863,56564852,48753969,36943756,36095539,66883571,52381918,71820697,43564538,63272993,40191157,37555789,34707717,28900820,36775194,62513789,83611686,44208542,56313753,57559814,46987123,62008994,59290497,46740474,38236954,48878571,34243324,37291208,40788968,27176035,33559073,25008291,28895274,33014457,26939467,35975925,31654036,33024535,29289884,24427813,33034150,38428816,33075517,28251588,38387804,32275677,24083616,21104763,31691742,28223947,67625518,23925716,23124143,20129015,19949972,17025050,23924329,23008260,26360495,24399193,18928810,19272255,21188682,19225092,22167223,21414227,24944288,20817961,20877108,28793753,23785950,29596827,36195714,38909096,126834091,33226948,33532636,43369256,43134846,48411684,33114539,26460244,24257556,25390718,24787301,17951598,22890966,24039140,24102781,22592342,20032017,27803514,24907532,23842358,23905769,26118720,34757944,24204566,24335223,17721438,37653081,25324828,22840779,23368291,18243271,20866770,21149438,20305664,25833151,83217844,42577106,33757639,31188605,45710516,35607946,34097825,28816848,29028833,133502985,50576699,38140658,31304021,28527781,21400392,24806351,28167461,19585194,28391026,22269203,27317555,25356841,24545520,32024385,31433864,53336533,89893301,32776653,32157167,25610587,28078995,32327477,37550411,30558718,26003419,35121958,22075616,26587749,29335221,19473499,16920721,15756913,18162301,21655161,19283902,20523493,18856423,14214341,17271044,15221922,18732373,18151506,18552579,20971202,16417207,16930185,20860269,26075363,18900489,16278416,17493359,20146083,35113934,29302962,30130213,24274273,27062614,44606965,20937104,17383982,33707272,19822203,19955336,21688720,28065071,20536400,25463536,29910788,19189515,20085874,16726411,16212611,20089020,18196509,26497418,22177464,25313748,27402451,23830014,19149538,22878397,49455612,80032206,54066978,35137164,29911608,28479856,33574684,26434697,24532986,22147005,21600427,28697016,31664798,22935355,49632479,57822394,38767843,41328422,35904126,27332475,32132728,27686311,19652595,23206700,21848913,8409616,20732619,22366721,34655435,34542121,25515665,23552658,19907035,30808969,21220753,27349356,20198081,35718868,30352654,27669868,42453083,34338219,26028379,17096304,22176585,12403819,11763173,14653348,10250582,25579908,20694101,21339969,24875968,19922919,20382730,18593004,21517335,20968223,19422310,20663983,19670102,18451655,30213462,23097581,24672940,24654933,43554645,44817972,31651445,25270549,39671528,45827013,30301759,19796360,20277226,18096358,22644443,18170729,22920101,23108426,17005157,20546345,21248818,20655869,19292651,20273128,21796800,15871507,23239825,26937459,24539597,18139405,18750255,18520987,21510907,19846832,19538245,20100035,14280202,24833810,20674296,49219686,14598083,26640480,20680015,19269203,22617105,18614662,20080358,13618424,15122823,21040331,20400871,12997449,21448594,18103453,14089274,17952742,18791533,17108513,17896483,16689265,15155611,26992771,22299477,32522645,29721254,29983174,25544417,32219234,38940853,31304672,23000828,28725646,21421413,18882845,18446053,22318181,17842038,27985424,17073013,30705323,33250702,29964198,24789790,26496478,15484530,15347877,14422965,21702912,19644260,16901792,29538356,21066468,34586054,29507429,31220057,21895156,23982410,48619420,47363986,24815455,25271276,25701569,46911637,23146852,20775590,19190623,22222851,23176418,19308122,24862560,25226070,28231562,23039328,16164331,20174523,20776555,15897154,14903400,16880205,17382861,20149208,25689303],"s":"ok"}
        /// </summary>
        /// <param name="symbol"></param>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="resolution"></param>
        /// <returns></returns>
        [HttpGet("history")]
        public ActionResult<ResultBase> History([FromQuery] string symbol, [FromQuery] string from, [FromQuery] string to, [FromQuery] string resolution)
        {
            try
            {
                if (symbol.StartsWith("DATAPROVIDER:"))
                {
                    symbol = symbol.Substring(13);
                }
                if (symbol.StartsWith("ALGO:"))
                {
                    symbol = symbol.Substring(5);
                }
                bool isContinual = false;
                if (symbol.EndsWith("-CONTINUALDATA"))
                {
                    symbol = symbol.Substring(0, symbol.Length - "-CONTINUALDATA".Length);
                    isContinual = true;
                }

                if (!graphQLRepository.OHLC.ContainsKey(resolution)) throw new Exception($"Resolution {resolution} is not supported");

                if (!graphQLRepository.OHLC[resolution].ContainsKey(symbol)) return Ok(new NoDataResult() { });

                long fromLong;
                long toLong;
                if (!long.TryParse(from, out fromLong))
                {
                    throw new Exception("Unable to parse from parameter");
                }
                if (!long.TryParse(to, out toLong))
                {
                    throw new Exception("Unable to parse from parameter");
                }

                var ticks = graphQLRepository.OHLC[resolution][symbol].Where(t => t.Key >= fromLong && t.Key < toLong).Select(kv => kv.Value).OrderBy(v => v.Time);
                var ret = new HistoryResult();
                foreach (var tick in ticks)
                {
                    ret.TimeArray.Add(tick.Time);
                    ret.OpenArray.Add(tick.Open);
                    ret.HighArray.Add(tick.High);
                    ret.LowArray.Add(tick.Low);
                    ret.CloseArray.Add(tick.Close);
                    ret.VolumeArray.Add(tick.Volume);
                }

                return Ok(ret);
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// Quotes 
        /// 
        /// {"s":"ok","d":[{"s":"ok","n":"MSFT","v":{"ch":0,"chp":0,"short_name":"MSFT","exchange":"","original_name":"MSFT","description":"MSFT","lp":94.94,"ask":94.94,"bid":94.94,"open_price":94.94,"high_price":94.94,"low_price":94.94,"prev_close_price":93.78,"volume":94.94}}],"source":"Quandl"}
        /// </summary>
        /// <param name="symbols"></param>
        /// <returns></returns>
        [HttpGet("quotes")]
        public ActionResult<QuotesResult> Quotes([FromQuery] string symbols)
        {
            try
            {
                var ret = new QuotesResult() { };
                var resolution = "D";
                if (!graphQLRepository.OHLC.ContainsKey(resolution)) return ret;
                foreach (var symbol in symbols.Split(','))
                {
                    if (!graphQLRepository.OHLC[resolution].ContainsKey(symbol)) continue;
                    if (graphQLRepository.OHLC[resolution][symbol].Count == 0) continue;

                    graphQLRepository.Symbols.TryGetValue(symbol, out var s);
                    if (s == null) continue;

                    var latest = graphQLRepository.OHLC[resolution][symbol].Keys.Max();
                    var tick = graphQLRepository.OHLC[resolution][symbol][latest];
                    decimal? change = null;
                    decimal? changePerc = null;
                    decimal? previousClosePrice = null;
                    if (graphQLRepository.OHLC[resolution][symbol].Count >= 2)
                    {
                        var prev = graphQLRepository.OHLC[resolution][symbol].Keys.Where(k => k < latest).Max();
                        var prevTick = graphQLRepository.OHLC[resolution][symbol][prev];
                        change = tick.Close - prevTick.Close;
                        changePerc = tick.Close / prevTick.Close - 1;
                        previousClosePrice = prevTick.Close;
                    }
                    var quote = new Quote()
                    {
                        Bid = tick.Low, // TODO
                        Change = change,
                        ChangePercent = changePerc,
                        Description = s.Description,
                        Exchange = "ALGO",
                        HighPrice = tick.High,
                        LastPrice = tick.High, // TODO
                        LowPrice = tick.Low,
                        Offer = tick.High, // TODO
                        OpenPrice = tick.Open,
                        PreviousClosePrice = previousClosePrice,
                        ShortName = s.Name,
                        Spread = tick.High - tick.Low,
                        Volume = tick.Volume
                    };
                    ret.Quotes.Add(quote);
                }

                return Ok();
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// SymbolInfo
        /// </summary>
        [HttpGet("symbol_info")]
        public ActionResult<string> SymbolInfo()
        {
            try
            {
                return Ok(@"{
   symbol: [""AAPL"", ""MSFT"", ""SPX""],
   description: [""Apple Inc"", ""Microsoft corp"", ""S&P 500 index""],
   exchange-listed: ""NYSE"",
   exchange-traded: ""NYSE"",
   minmovement: 1,
   minmovement2: 0,
   pricescale: [1, 1, 100],
   has-dwm: true,
   has-intraday: true,
   has-no-volume: [false, false, true]
   type: [""stock"", ""stock"", ""index""],
   ticker: [""AAPL~0"", ""MSFT~0"", ""$SPX500""],
   timezone: ""America/New_York"",
   session-regular: ""0900-1600""
}");
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// Server time
        /// </summary>
        [HttpGet("time")]
        public ActionResult<string> Time()
        {
            try
            {
                return Ok(DateTimeOffset.UtcNow.ToUnixTimeSeconds().ToString());
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// TimescaleMarks
        /// </summary>
        [HttpGet("timescale_marks")]
        public ActionResult<string> TimescaleMarks()
        {
            try
            {
                return Ok("[]");
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
        /// <summary>
        /// Marks 
        /// </summary>
        /// <param name="symbol"></param>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="resolution"></param>
        /// <returns></returns>
        [HttpGet("marks")]
        public ActionResult<string> Marks()
        {
            try
            {
                return Ok("{}");
            }
            catch (Exception e)
            {
                return Ok(new ErrorResult() { ErrorMessage = e.Message });
            }
        }
    }
}
